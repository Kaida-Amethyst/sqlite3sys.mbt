package "Kaida-Amethyst/sqlite3sys"

// Values
const FTS5_TOKENIZE_AUX : Int = 0x0008

const FTS5_TOKENIZE_DOCUMENT : Int = 0x0004

const FTS5_TOKENIZE_PREFIX : Int = 0x0002

const FTS5_TOKENIZE_QUERY : Int = 0x0001

const FTS5_TOKEN_COLOCATED : Int = 0x0001

const FULLY_WITHIN : Int = 2

const NOT_WITHIN : Int = 0

const PARTLY_WITHIN : Int = 1

const SQLITE3_TEXT : Int = 3

const SQLITE_ABORT : Int = 4

const SQLITE_ABORT_ROLLBACK : Int = 516

const SQLITE_ACCESS_EXISTS : Int = 0

const SQLITE_ACCESS_READ : Int = 2

const SQLITE_ACCESS_READWRITE : Int = 1

const SQLITE_ALTER_TABLE : Int = 26

const SQLITE_ANALYZE : Int = 28

const SQLITE_ANY : Int = 5

const SQLITE_ATTACH : Int = 24

const SQLITE_AUTH : Int = 23

const SQLITE_AUTH_USER : Int = 279

const SQLITE_BLOB : Int = 4

const SQLITE_BUSY : Int = 5

const SQLITE_BUSY_RECOVERY : Int = 261

const SQLITE_BUSY_SNAPSHOT : Int = 517

const SQLITE_BUSY_TIMEOUT : Int = 773

const SQLITE_CANTOPEN : Int = 14

const SQLITE_CANTOPEN_CONVPATH : Int = 1038

const SQLITE_CANTOPEN_DIRTYWAL : Int = 1294

const SQLITE_CANTOPEN_FULLPATH : Int = 782

const SQLITE_CANTOPEN_ISDIR : Int = 526

const SQLITE_CANTOPEN_NOTEMPDIR : Int = 270

const SQLITE_CANTOPEN_SYMLINK : Int = 1550

const SQLITE_CHANGESETAPPLY_FKNOACTION : Int = 0x0008

const SQLITE_CHANGESETAPPLY_IGNORENOOP : Int = 0x0004

const SQLITE_CHANGESETAPPLY_INVERT : Int = 0x0002

const SQLITE_CHANGESETAPPLY_NOSAVEPOINT : Int = 0x0001

const SQLITE_CHANGESETSTART_INVERT : Int = 0x0002

const SQLITE_CHANGESET_ABORT : Int = 2

const SQLITE_CHANGESET_CONFLICT : Int = 3

const SQLITE_CHANGESET_CONSTRAINT : Int = 4

const SQLITE_CHANGESET_DATA : Int = 1

const SQLITE_CHANGESET_FOREIGN_KEY : Int = 5

const SQLITE_CHANGESET_NOTFOUND : Int = 2

const SQLITE_CHANGESET_OMIT : Int = 0

const SQLITE_CHANGESET_REPLACE : Int = 1

const SQLITE_CHECKPOINT_FULL : Int = 1

const SQLITE_CHECKPOINT_PASSIVE : Int = 0

const SQLITE_CHECKPOINT_RESTART : Int = 2

const SQLITE_CHECKPOINT_TRUNCATE : Int = 3

const SQLITE_CONFIG_COVERING_INDEX_SCAN : Int = 20

const SQLITE_CONFIG_GETMALLOC : Int = 5

const SQLITE_CONFIG_GETMUTEX : Int = 11

const SQLITE_CONFIG_GETPCACHE : Int = 15

const SQLITE_CONFIG_GETPCACHE2 : Int = 19

const SQLITE_CONFIG_HEAP : Int = 8

const SQLITE_CONFIG_LOG : Int = 16

const SQLITE_CONFIG_LOOKASIDE : Int = 13

const SQLITE_CONFIG_MALLOC : Int = 4

const SQLITE_CONFIG_MEMDB_MAXSIZE : Int = 29

const SQLITE_CONFIG_MEMSTATUS : Int = 9

const SQLITE_CONFIG_MMAP_SIZE : Int = 22

const SQLITE_CONFIG_MULTITHREAD : Int = 2

const SQLITE_CONFIG_MUTEX : Int = 10

const SQLITE_CONFIG_PAGECACHE : Int = 7

const SQLITE_CONFIG_PCACHE : Int = 14

const SQLITE_CONFIG_PCACHE2 : Int = 18

const SQLITE_CONFIG_PCACHE_HDRSZ : Int = 24

const SQLITE_CONFIG_PMASZ : Int = 25

const SQLITE_CONFIG_ROWID_IN_VIEW : Int = 30

const SQLITE_CONFIG_SCRATCH : Int = 6

const SQLITE_CONFIG_SERIALIZED : Int = 3

const SQLITE_CONFIG_SINGLETHREAD : Int = 1

const SQLITE_CONFIG_SMALL_MALLOC : Int = 27

const SQLITE_CONFIG_SORTERREF_SIZE : Int = 28

const SQLITE_CONFIG_SQLLOG : Int = 21

const SQLITE_CONFIG_STMTJRNL_SPILL : Int = 26

const SQLITE_CONFIG_URI : Int = 17

const SQLITE_CONFIG_WIN32_HEAPSIZE : Int = 23

const SQLITE_CONSTRAINT : Int = 19

const SQLITE_CONSTRAINT_CHECK : Int = 275

const SQLITE_CONSTRAINT_COMMITHOOK : Int = 531

const SQLITE_CONSTRAINT_DATATYPE : Int = 3091

const SQLITE_CONSTRAINT_FOREIGNKEY : Int = 787

const SQLITE_CONSTRAINT_FUNCTION : Int = 1043

const SQLITE_CONSTRAINT_NOTNULL : Int = 1299

const SQLITE_CONSTRAINT_PINNED : Int = 2835

const SQLITE_CONSTRAINT_PRIMARYKEY : Int = 1555

const SQLITE_CONSTRAINT_ROWID : Int = 2579

const SQLITE_CONSTRAINT_TRIGGER : Int = 1811

const SQLITE_CONSTRAINT_UNIQUE : Int = 2067

const SQLITE_CONSTRAINT_VTAB : Int = 2323

const SQLITE_COPY : Int = 0

const SQLITE_CORRUPT : Int = 11

const SQLITE_CORRUPT_INDEX : Int = 779

const SQLITE_CORRUPT_SEQUENCE : Int = 523

const SQLITE_CORRUPT_VTAB : Int = 267

const SQLITE_CREATE_INDEX : Int = 1

const SQLITE_CREATE_TABLE : Int = 2

const SQLITE_CREATE_TEMP_INDEX : Int = 3

const SQLITE_CREATE_TEMP_TABLE : Int = 4

const SQLITE_CREATE_TEMP_TRIGGER : Int = 5

const SQLITE_CREATE_TEMP_VIEW : Int = 6

const SQLITE_CREATE_TRIGGER : Int = 7

const SQLITE_CREATE_VIEW : Int = 8

const SQLITE_CREATE_VTABLE : Int = 29

const SQLITE_DBCONFIG_DEFENSIVE : Int = 1010

const SQLITE_DBCONFIG_DQS_DDL : Int = 1014

const SQLITE_DBCONFIG_DQS_DML : Int = 1013

const SQLITE_DBCONFIG_ENABLE_ATTACH_CREATE : Int = 1020

const SQLITE_DBCONFIG_ENABLE_ATTACH_WRITE : Int = 1021

const SQLITE_DBCONFIG_ENABLE_COMMENTS : Int = 1022

const SQLITE_DBCONFIG_ENABLE_FKEY : Int = 1002

const SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER : Int = 1004

const SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION : Int = 1005

const SQLITE_DBCONFIG_ENABLE_QPSG : Int = 1007

const SQLITE_DBCONFIG_ENABLE_TRIGGER : Int = 1003

const SQLITE_DBCONFIG_ENABLE_VIEW : Int = 1015

const SQLITE_DBCONFIG_LEGACY_ALTER_TABLE : Int = 1012

const SQLITE_DBCONFIG_LEGACY_FILE_FORMAT : Int = 1016

const SQLITE_DBCONFIG_LOOKASIDE : Int = 1001

const SQLITE_DBCONFIG_MAINDBNAME : Int = 1000

const SQLITE_DBCONFIG_MAX : Int = 1022

const SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE : Int = 1006

const SQLITE_DBCONFIG_RESET_DATABASE : Int = 1009

const SQLITE_DBCONFIG_REVERSE_SCANORDER : Int = 1019

const SQLITE_DBCONFIG_STMT_SCANSTATUS : Int = 1018

const SQLITE_DBCONFIG_TRIGGER_EQP : Int = 1008

const SQLITE_DBCONFIG_TRUSTED_SCHEMA : Int = 1017

const SQLITE_DBCONFIG_WRITABLE_SCHEMA : Int = 1011

const SQLITE_DBSTATUS_CACHE_HIT : Int = 7

const SQLITE_DBSTATUS_CACHE_MISS : Int = 8

const SQLITE_DBSTATUS_CACHE_SPILL : Int = 12

const SQLITE_DBSTATUS_CACHE_USED : Int = 1

const SQLITE_DBSTATUS_CACHE_USED_SHARED : Int = 11

const SQLITE_DBSTATUS_CACHE_WRITE : Int = 9

const SQLITE_DBSTATUS_DEFERRED_FKS : Int = 10

const SQLITE_DBSTATUS_LOOKASIDE_HIT : Int = 4

const SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL : Int = 6

const SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE : Int = 5

const SQLITE_DBSTATUS_LOOKASIDE_USED : Int = 0

const SQLITE_DBSTATUS_MAX : Int = 12

const SQLITE_DBSTATUS_SCHEMA_USED : Int = 2

const SQLITE_DBSTATUS_STMT_USED : Int = 3

const SQLITE_DELETE : Int = 9

const SQLITE_DENY : Int = 1

const SQLITE_DESERIALIZE_FREEONCLOSE : Int = 1

const SQLITE_DESERIALIZE_READONLY : Int = 4

const SQLITE_DESERIALIZE_RESIZEABLE : Int = 2

const SQLITE_DETACH : Int = 25

const SQLITE_DETERMINISTIC : Int = 0x000000800

const SQLITE_DIRECTONLY : Int = 0x000080000

const SQLITE_DONE : Int = 101

const SQLITE_DROP_INDEX : Int = 10

const SQLITE_DROP_TABLE : Int = 11

const SQLITE_DROP_TEMP_INDEX : Int = 12

const SQLITE_DROP_TEMP_TABLE : Int = 13

const SQLITE_DROP_TEMP_TRIGGER : Int = 14

const SQLITE_DROP_TEMP_VIEW : Int = 15

const SQLITE_DROP_TRIGGER : Int = 16

const SQLITE_DROP_VIEW : Int = 17

const SQLITE_DROP_VTABLE : Int = 30

const SQLITE_EMPTY : Int = 16

const SQLITE_ERROR : Int = 1

const SQLITE_ERROR_MISSING_COLLSEQ : Int = 257

const SQLITE_ERROR_RETRY : Int = 513

const SQLITE_ERROR_SNAPSHOT : Int = 769

const SQLITE_FAIL : Int = 3

const SQLITE_FCNTL_BEGIN_ATOMIC_WRITE : Int = 31

const SQLITE_FCNTL_BLOCK_ON_CONNECT : Int = 44

const SQLITE_FCNTL_BUSYHANDLER : Int = 15

const SQLITE_FCNTL_CHUNK_SIZE : Int = 6

const SQLITE_FCNTL_CKPT_DONE : Int = 37

const SQLITE_FCNTL_CKPT_START : Int = 39

const SQLITE_FCNTL_CKSM_FILE : Int = 41

const SQLITE_FCNTL_COMMIT_ATOMIC_WRITE : Int = 32

const SQLITE_FCNTL_COMMIT_PHASETWO : Int = 22

const SQLITE_FCNTL_DATA_VERSION : Int = 35

const SQLITE_FCNTL_EXTERNAL_READER : Int = 40

const SQLITE_FCNTL_FILE_POINTER : Int = 7

const SQLITE_FCNTL_GET_LOCKPROXYFILE : Int = 2

const SQLITE_FCNTL_HAS_MOVED : Int = 20

const SQLITE_FCNTL_JOURNAL_POINTER : Int = 28

const SQLITE_FCNTL_LAST_ERRNO : Int = 4

const SQLITE_FCNTL_LOCKSTATE : Int = 1

const SQLITE_FCNTL_LOCK_TIMEOUT : Int = 34

const SQLITE_FCNTL_MMAP_SIZE : Int = 18

const SQLITE_FCNTL_NULL_IO : Int = 43

const SQLITE_FCNTL_OVERWRITE : Int = 11

const SQLITE_FCNTL_PDB : Int = 30

const SQLITE_FCNTL_PERSIST_WAL : Int = 10

const SQLITE_FCNTL_POWERSAFE_OVERWRITE : Int = 13

const SQLITE_FCNTL_PRAGMA : Int = 14

const SQLITE_FCNTL_RBU : Int = 26

const SQLITE_FCNTL_RESERVE_BYTES : Int = 38

const SQLITE_FCNTL_RESET_CACHE : Int = 42

const SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE : Int = 33

const SQLITE_FCNTL_SET_LOCKPROXYFILE : Int = 3

const SQLITE_FCNTL_SIZE_HINT : Int = 5

const SQLITE_FCNTL_SIZE_LIMIT : Int = 36

const SQLITE_FCNTL_SYNC : Int = 21

const SQLITE_FCNTL_SYNC_OMITTED : Int = 8

const SQLITE_FCNTL_TEMPFILENAME : Int = 16

const SQLITE_FCNTL_TRACE : Int = 19

const SQLITE_FCNTL_VFSNAME : Int = 12

const SQLITE_FCNTL_VFS_POINTER : Int = 27

const SQLITE_FCNTL_WAL_BLOCK : Int = 24

const SQLITE_FCNTL_WIN32_AV_RETRY : Int = 9

const SQLITE_FCNTL_WIN32_GET_HANDLE : Int = 29

const SQLITE_FCNTL_WIN32_SET_HANDLE : Int = 23

const SQLITE_FCNTL_ZIPVFS : Int = 25

const SQLITE_FLOAT : Int = 2

const SQLITE_FORMAT : Int = 24

const SQLITE_FULL : Int = 13

const SQLITE_FUNCTION : Int = 31

const SQLITE_GET_LOCKPROXYFILE : Int = 2

const SQLITE_IGNORE : Int = 2

const SQLITE_INDEX_CONSTRAINT_EQ : Int = 2

const SQLITE_INDEX_CONSTRAINT_FUNCTION : Int = 150

const SQLITE_INDEX_CONSTRAINT_GE : Int = 32

const SQLITE_INDEX_CONSTRAINT_GLOB : Int = 66

const SQLITE_INDEX_CONSTRAINT_GT : Int = 4

const SQLITE_INDEX_CONSTRAINT_IS : Int = 72

const SQLITE_INDEX_CONSTRAINT_ISNOT : Int = 69

const SQLITE_INDEX_CONSTRAINT_ISNOTNULL : Int = 70

const SQLITE_INDEX_CONSTRAINT_ISNULL : Int = 71

const SQLITE_INDEX_CONSTRAINT_LE : Int = 8

const SQLITE_INDEX_CONSTRAINT_LIKE : Int = 65

const SQLITE_INDEX_CONSTRAINT_LIMIT : Int = 73

const SQLITE_INDEX_CONSTRAINT_LT : Int = 16

const SQLITE_INDEX_CONSTRAINT_MATCH : Int = 64

const SQLITE_INDEX_CONSTRAINT_NE : Int = 68

const SQLITE_INDEX_CONSTRAINT_OFFSET : Int = 74

const SQLITE_INDEX_CONSTRAINT_REGEXP : Int = 67

const SQLITE_INDEX_SCAN_HEX : Int = 0x00000002

const SQLITE_INDEX_SCAN_UNIQUE : Int = 0x00000001

const SQLITE_INNOCUOUS : Int = 0x000200000

const SQLITE_INSERT : Int = 18

const SQLITE_INTEGER : Int = 1

const SQLITE_INTERNAL : Int = 2

const SQLITE_INTERRUPT : Int = 9

const SQLITE_IOCAP_ATOMIC : Int = 0x00000001

const SQLITE_IOCAP_ATOMIC16K : Int = 0x00000040

const SQLITE_IOCAP_ATOMIC1K : Int = 0x00000004

const SQLITE_IOCAP_ATOMIC2K : Int = 0x00000008

const SQLITE_IOCAP_ATOMIC32K : Int = 0x00000080

const SQLITE_IOCAP_ATOMIC4K : Int = 0x00000010

const SQLITE_IOCAP_ATOMIC512 : Int = 0x00000002

const SQLITE_IOCAP_ATOMIC64K : Int = 0x00000100

const SQLITE_IOCAP_ATOMIC8K : Int = 0x00000020

const SQLITE_IOCAP_BATCH_ATOMIC : Int = 0x00004000

const SQLITE_IOCAP_IMMUTABLE : Int = 0x00002000

const SQLITE_IOCAP_POWERSAFE_OVERWRITE : Int = 0x00001000

const SQLITE_IOCAP_SAFE_APPEND : Int = 0x00000200

const SQLITE_IOCAP_SEQUENTIAL : Int = 0x00000400

const SQLITE_IOCAP_SUBPAGE_READ : Int = 0x00008000

const SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN : Int = 0x00000800

const SQLITE_IOERR : Int = 10

const SQLITE_IOERR_ACCESS : Int = 3338

const SQLITE_IOERR_AUTH : Int = 7178

const SQLITE_IOERR_BEGIN_ATOMIC : Int = 7434

const SQLITE_IOERR_BLOCKED : Int = 2826

const SQLITE_IOERR_CHECKRESERVEDLOCK : Int = 3594

const SQLITE_IOERR_CLOSE : Int = 4106

const SQLITE_IOERR_COMMIT_ATOMIC : Int = 7690

const SQLITE_IOERR_CONVPATH : Int = 6666

const SQLITE_IOERR_CORRUPTFS : Int = 8458

const SQLITE_IOERR_DATA : Int = 8202

const SQLITE_IOERR_DELETE : Int = 2570

const SQLITE_IOERR_DELETE_NOENT : Int = 5898

const SQLITE_IOERR_DIR_CLOSE : Int = 4362

const SQLITE_IOERR_DIR_FSYNC : Int = 1290

const SQLITE_IOERR_FSTAT : Int = 1802

const SQLITE_IOERR_FSYNC : Int = 1034

const SQLITE_IOERR_GETTEMPPATH : Int = 6410

const SQLITE_IOERR_IN_PAGE : Int = 8714

const SQLITE_IOERR_LOCK : Int = 3850

const SQLITE_IOERR_MMAP : Int = 6154

const SQLITE_IOERR_NOMEM : Int = 3082

const SQLITE_IOERR_RDLOCK : Int = 2314

const SQLITE_IOERR_READ : Int = 266

const SQLITE_IOERR_ROLLBACK_ATOMIC : Int = 7946

const SQLITE_IOERR_SEEK : Int = 5642

const SQLITE_IOERR_SHMLOCK : Int = 5130

const SQLITE_IOERR_SHMMAP : Int = 5386

const SQLITE_IOERR_SHMOPEN : Int = 4618

const SQLITE_IOERR_SHMSIZE : Int = 4874

const SQLITE_IOERR_SHORT_READ : Int = 522

const SQLITE_IOERR_TRUNCATE : Int = 1546

const SQLITE_IOERR_UNLOCK : Int = 2058

const SQLITE_IOERR_VNODE : Int = 6922

const SQLITE_IOERR_WRITE : Int = 778

const SQLITE_LAST_ERRNO : Int = 4

const SQLITE_LIMIT_ATTACHED : Int = 7

const SQLITE_LIMIT_COLUMN : Int = 2

const SQLITE_LIMIT_COMPOUND_SELECT : Int = 4

const SQLITE_LIMIT_EXPR_DEPTH : Int = 3

const SQLITE_LIMIT_FUNCTION_ARG : Int = 6

const SQLITE_LIMIT_LENGTH : Int = 0

const SQLITE_LIMIT_LIKE_PATTERN_LENGTH : Int = 8

const SQLITE_LIMIT_SQL_LENGTH : Int = 1

const SQLITE_LIMIT_TRIGGER_DEPTH : Int = 10

const SQLITE_LIMIT_VARIABLE_NUMBER : Int = 9

const SQLITE_LIMIT_VDBE_OP : Int = 5

const SQLITE_LIMIT_WORKER_THREADS : Int = 11

const SQLITE_LOCKED : Int = 6

const SQLITE_LOCKED_SHAREDCACHE : Int = 262

const SQLITE_LOCKED_VTAB : Int = 518

const SQLITE_LOCK_EXCLUSIVE : Int = 4

const SQLITE_LOCK_NONE : Int = 0

const SQLITE_LOCK_PENDING : Int = 3

const SQLITE_LOCK_RESERVED : Int = 2

const SQLITE_LOCK_SHARED : Int = 1

const SQLITE_MISMATCH : Int = 20

const SQLITE_MISUSE : Int = 21

const SQLITE_MUTEX_FAST : Int = 0

const SQLITE_MUTEX_RECURSIVE : Int = 1

const SQLITE_MUTEX_STATIC_APP1 : Int = 8

const SQLITE_MUTEX_STATIC_APP2 : Int = 9

const SQLITE_MUTEX_STATIC_APP3 : Int = 10

const SQLITE_MUTEX_STATIC_LRU : Int = 6

const SQLITE_MUTEX_STATIC_LRU2 : Int = 7

const SQLITE_MUTEX_STATIC_MAIN : Int = 2

const SQLITE_MUTEX_STATIC_MASTER : Int = 2

const SQLITE_MUTEX_STATIC_MEM : Int = 3

const SQLITE_MUTEX_STATIC_MEM2 : Int = 4

const SQLITE_MUTEX_STATIC_OPEN : Int = 4

const SQLITE_MUTEX_STATIC_PMEM : Int = 7

const SQLITE_MUTEX_STATIC_PRNG : Int = 5

const SQLITE_MUTEX_STATIC_VFS1 : Int = 11

const SQLITE_MUTEX_STATIC_VFS2 : Int = 12

const SQLITE_MUTEX_STATIC_VFS3 : Int = 13

const SQLITE_NOLFS : Int = 22

const SQLITE_NOMEM : Int = 7

const SQLITE_NOTADB : Int = 26

const SQLITE_NOTFOUND : Int = 12

const SQLITE_NOTICE : Int = 27

const SQLITE_NOTICE_RBU : Int = 795

const SQLITE_NOTICE_RECOVER_ROLLBACK : Int = 539

const SQLITE_NOTICE_RECOVER_WAL : Int = 283

const SQLITE_NULL : Int = 5

const SQLITE_OK : Int = 0

const SQLITE_OK_LOAD_PERMANENTLY : Int = 256

const SQLITE_OK_SYMLINK : Int = 512

const SQLITE_OPEN_AUTOPROXY : Int = 0x00000020

const SQLITE_OPEN_CREATE : Int = 0x00000004

const SQLITE_OPEN_DELETEONCLOSE : Int = 0x00000008

const SQLITE_OPEN_EXCLUSIVE : Int = 0x00000010

const SQLITE_OPEN_EXRESCODE : Int = 0x02000000

const SQLITE_OPEN_FULLMUTEX : Int = 0x00010000

const SQLITE_OPEN_MAIN_DB : Int = 0x00000100

const SQLITE_OPEN_MAIN_JOURNAL : Int = 0x00000800

const SQLITE_OPEN_MASTER_JOURNAL : Int = 0x00004000

const SQLITE_OPEN_MEMORY : Int = 0x00000080

const SQLITE_OPEN_NOFOLLOW : Int = 0x01000000

const SQLITE_OPEN_NOMUTEX : Int = 0x00008000

const SQLITE_OPEN_PRIVATECACHE : Int = 0x00040000

const SQLITE_OPEN_READONLY : Int = 0x00000001

const SQLITE_OPEN_READWRITE : Int = 0x00000002

const SQLITE_OPEN_SHAREDCACHE : Int = 0x00020000

const SQLITE_OPEN_SUBJOURNAL : Int = 0x00002000

const SQLITE_OPEN_SUPER_JOURNAL : Int = 0x00004000

const SQLITE_OPEN_TEMP_DB : Int = 0x00000200

const SQLITE_OPEN_TEMP_JOURNAL : Int = 0x00001000

const SQLITE_OPEN_TRANSIENT_DB : Int = 0x00000400

const SQLITE_OPEN_URI : Int = 0x00000040

const SQLITE_OPEN_WAL : Int = 0x00080000

const SQLITE_PERM : Int = 3

const SQLITE_PRAGMA : Int = 19

const SQLITE_PREPARE_DONT_LOG : Int = 0x10

const SQLITE_PREPARE_NORMALIZE : Int = 0x02

const SQLITE_PREPARE_NO_VTAB : Int = 0x04

const SQLITE_PREPARE_PERSISTENT : Int = 0x01

const SQLITE_PROTOCOL : Int = 15

const SQLITE_RANGE : Int = 25

const SQLITE_READ : Int = 20

const SQLITE_READONLY : Int = 8

const SQLITE_READONLY_CANTINIT : Int = 1288

const SQLITE_READONLY_CANTLOCK : Int = 520

const SQLITE_READONLY_DBMOVED : Int = 1032

const SQLITE_READONLY_DIRECTORY : Int = 1544

const SQLITE_READONLY_RECOVERY : Int = 264

const SQLITE_READONLY_ROLLBACK : Int = 776

const SQLITE_RECURSIVE : Int = 33

const SQLITE_REINDEX : Int = 27

const SQLITE_REPLACE : Int = 5

const SQLITE_RESULT_SUBTYPE : Int = 0x001000000

const SQLITE_ROLLBACK : Int = 1

const SQLITE_ROW : Int = 100

const SQLITE_SAVEPOINT : Int = 32

const SQLITE_SCANSTAT_COMPLEX : Int = 0x0001

const SQLITE_SCANSTAT_EST : Int = 2

const SQLITE_SCANSTAT_EXPLAIN : Int = 4

const SQLITE_SCANSTAT_NAME : Int = 3

const SQLITE_SCANSTAT_NCYCLE : Int = 7

const SQLITE_SCANSTAT_NLOOP : Int = 0

const SQLITE_SCANSTAT_NVISIT : Int = 1

const SQLITE_SCANSTAT_PARENTID : Int = 6

const SQLITE_SCANSTAT_SELECTID : Int = 5

const SQLITE_SCHEMA : Int = 17

const SQLITE_SELECT : Int = 21

const SQLITE_SELFORDER1 : Int = 0x002000000

const SQLITE_SERIALIZE_NOCOPY : Int = 0x001

const SQLITE_SESSION_CONFIG_STRMSIZE : Int = 1

const SQLITE_SESSION_OBJCONFIG_ROWID : Int = 2

const SQLITE_SESSION_OBJCONFIG_SIZE : Int = 1

const SQLITE_SETLK_BLOCK_ON_CONNECT : Int = 0x01

const SQLITE_SET_LOCKPROXYFILE : Int = 3

const SQLITE_SHM_EXCLUSIVE : Int = 8

const SQLITE_SHM_LOCK : Int = 2

const SQLITE_SHM_NLOCK : Int = 8

const SQLITE_SHM_SHARED : Int = 4

const SQLITE_SHM_UNLOCK : Int = 1

const SQLITE_STATIC : Int = 0

const SQLITE_STATUS_MALLOC_COUNT : Int = 9

const SQLITE_STATUS_MALLOC_SIZE : Int = 5

const SQLITE_STATUS_MEMORY_USED : Int = 0

const SQLITE_STATUS_PAGECACHE_OVERFLOW : Int = 2

const SQLITE_STATUS_PAGECACHE_SIZE : Int = 7

const SQLITE_STATUS_PAGECACHE_USED : Int = 1

const SQLITE_STATUS_PARSER_STACK : Int = 6

const SQLITE_STATUS_SCRATCH_OVERFLOW : Int = 4

const SQLITE_STATUS_SCRATCH_SIZE : Int = 8

const SQLITE_STATUS_SCRATCH_USED : Int = 3

const SQLITE_STMTSTATUS_AUTOINDEX : Int = 3

const SQLITE_STMTSTATUS_FILTER_HIT : Int = 8

const SQLITE_STMTSTATUS_FILTER_MISS : Int = 7

const SQLITE_STMTSTATUS_FULLSCAN_STEP : Int = 1

const SQLITE_STMTSTATUS_MEMUSED : Int = 99

const SQLITE_STMTSTATUS_REPREPARE : Int = 5

const SQLITE_STMTSTATUS_RUN : Int = 6

const SQLITE_STMTSTATUS_SORT : Int = 2

const SQLITE_STMTSTATUS_VM_STEP : Int = 4

const SQLITE_SUBTYPE : Int = 0x000100000

const SQLITE_SYNC_DATAONLY : Int = 0x00010

const SQLITE_SYNC_FULL : Int = 0x00003

const SQLITE_SYNC_NORMAL : Int = 0x00002

const SQLITE_TESTCTRL_ALWAYS : Int = 13

const SQLITE_TESTCTRL_ASSERT : Int = 12

const SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS : Int = 10

const SQLITE_TESTCTRL_BITVEC_TEST : Int = 8

const SQLITE_TESTCTRL_BYTEORDER : Int = 22

const SQLITE_TESTCTRL_EXPLAIN_STMT : Int = 19

const SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS : Int = 29

const SQLITE_TESTCTRL_FAULT_INSTALL : Int = 9

const SQLITE_TESTCTRL_FIRST : Int = 5

const SQLITE_TESTCTRL_FK_NO_ACTION : Int = 7

const SQLITE_TESTCTRL_GETOPT : Int = 16

const SQLITE_TESTCTRL_IMPOSTER : Int = 25

const SQLITE_TESTCTRL_INTERNAL_FUNCTIONS : Int = 17

const SQLITE_TESTCTRL_ISINIT : Int = 23

const SQLITE_TESTCTRL_ISKEYWORD : Int = 16

const SQLITE_TESTCTRL_JSON_SELFCHECK : Int = 14

const SQLITE_TESTCTRL_LAST : Int = 34

const SQLITE_TESTCTRL_LOCALTIME_FAULT : Int = 18

const SQLITE_TESTCTRL_LOGEST : Int = 33

const SQLITE_TESTCTRL_NEVER_CORRUPT : Int = 20

const SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD : Int = 19

const SQLITE_TESTCTRL_OPTIMIZATIONS : Int = 15

const SQLITE_TESTCTRL_PARSER_COVERAGE : Int = 26

const SQLITE_TESTCTRL_PENDING_BYTE : Int = 11

const SQLITE_TESTCTRL_PRNG_RESET : Int = 7

const SQLITE_TESTCTRL_PRNG_RESTORE : Int = 6

const SQLITE_TESTCTRL_PRNG_SAVE : Int = 5

const SQLITE_TESTCTRL_PRNG_SEED : Int = 28

const SQLITE_TESTCTRL_RESERVE : Int = 14

const SQLITE_TESTCTRL_RESULT_INTREAL : Int = 27

const SQLITE_TESTCTRL_SCRATCHMALLOC : Int = 17

const SQLITE_TESTCTRL_SEEK_COUNT : Int = 30

const SQLITE_TESTCTRL_SORTER_MMAP : Int = 24

const SQLITE_TESTCTRL_TRACEFLAGS : Int = 31

const SQLITE_TESTCTRL_TUNE : Int = 32

const SQLITE_TESTCTRL_USELONGDOUBLE : Int = 34

const SQLITE_TESTCTRL_VDBE_COVERAGE : Int = 21

const SQLITE_TOOBIG : Int = 18

const SQLITE_TRACE_CLOSE : Int = 0x08

const SQLITE_TRACE_PROFILE : Int = 0x02

const SQLITE_TRACE_ROW : Int = 0x04

const SQLITE_TRACE_STMT : Int = 0x01

const SQLITE_TRANSACTION : Int = 22

const SQLITE_TRANSIENT : Int = -1

const SQLITE_TXN_NONE : Int = 0

const SQLITE_TXN_READ : Int = 1

const SQLITE_TXN_WRITE : Int = 2

const SQLITE_UPDATE : Int = 23

const SQLITE_UTF16 : Int = 4

const SQLITE_UTF16BE : Int = 3

const SQLITE_UTF16LE : Int = 2

const SQLITE_UTF16_ALIGNED : Int = 8

const SQLITE_UTF8 : Int = 1

const SQLITE_VTAB_CONSTRAINT_SUPPORT : Int = 1

const SQLITE_VTAB_DIRECTONLY : Int = 3

const SQLITE_VTAB_INNOCUOUS : Int = 2

const SQLITE_VTAB_USES_ALL_SCHEMAS : Int = 4

const SQLITE_WARNING : Int = 28

const SQLITE_WARNING_AUTOINDEX : Int = 284

const SQLITE_WIN32_DATA_DIRECTORY_TYPE : Int = 1

const SQLITE_WIN32_TEMP_DIRECTORY_TYPE : Int = 2

fn sqlite3_aggregate_context(Sqlite3_context, Int) -> AnyType

fn sqlite3_aggregate_count(Sqlite3_context) -> Int

fn sqlite3_auto_extension(FuncRef[() -> Unit]) -> Int

fn sqlite3_autovacuum_pages(Sqlite3, FuncRef[(AnyType, CStr, UInt, UInt, UInt) -> UInt], AnyType, FuncRef[(AnyType) -> AnyType]) -> Int

fn sqlite3_backup_finish(Sqlite3_backup) -> Int

fn sqlite3_backup_init(Sqlite3, CStr, Sqlite3, CStr) -> Sqlite3_backup

fn sqlite3_backup_pagecount(Sqlite3_backup) -> Int

fn sqlite3_backup_remaining(Sqlite3_backup) -> Int

fn sqlite3_backup_step(Sqlite3_backup, Int) -> Int

fn sqlite3_bind_blob(Sqlite3_stmt, Int, AnyType, Int, FuncRef[(AnyType) -> AnyType]) -> Int

fn sqlite3_bind_blob64(Sqlite3_stmt, Int, AnyType, UInt, FuncRef[(AnyType) -> AnyType]) -> Int

fn sqlite3_bind_double(Sqlite3_stmt, Int, Double) -> Int

fn sqlite3_bind_int(Sqlite3_stmt, Int, Int) -> Int

fn sqlite3_bind_int64(Sqlite3_stmt, Int, Int64) -> Int

fn sqlite3_bind_null(Sqlite3_stmt, Int) -> Int

fn sqlite3_bind_parameter_count(Sqlite3_stmt) -> Int

fn sqlite3_bind_parameter_index(Sqlite3_stmt, CStr) -> Int

fn sqlite3_bind_parameter_name(Sqlite3_stmt, Int) -> CStr

fn sqlite3_bind_pointer(Sqlite3_stmt, Int, AnyType, CStr, FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_bind_text(Sqlite3_stmt, Int, CStr, Int, FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_bind_text16(Sqlite3_stmt, Int, AnyType, Int, FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_bind_text64(Sqlite3_stmt, Int, CStr, UInt64, FuncRef[(AnyType) -> Unit], Byte) -> Int

fn sqlite3_bind_value(Sqlite3_stmt, Int, Sqlite3_value) -> Int

fn sqlite3_bind_zeroblob(Sqlite3_stmt, Int, Int) -> Int

fn sqlite3_bind_zeroblob64(Sqlite3_stmt, Int, UInt64) -> Int

fn sqlite3_blob_bytes(Sqlite3_blob) -> Int

fn sqlite3_blob_close(Sqlite3_blob) -> Int

fn sqlite3_blob_open(Sqlite3, CStr, CStr, CStr, Int64, Int, Ref[Sqlite3_blob]) -> Int

fn sqlite3_blob_read(Sqlite3_blob, AnyType, Int, Int) -> Int

fn sqlite3_blob_reopen(Sqlite3_blob, Int64) -> Int

fn sqlite3_blob_write(Sqlite3_blob, AnyType, Int, Int) -> Int

fn sqlite3_busy_handler(Sqlite3, FuncRef[(AnyType, Int) -> Int], AnyType) -> Int

fn sqlite3_busy_timeout(Sqlite3, Int) -> Int

fn sqlite3_cancel_auto_extension(FuncRef[() -> Unit]) -> Int

fn sqlite3_changes(Sqlite3) -> Int

fn sqlite3_changes64(Sqlite3) -> Int64

fn sqlite3_clear_bindings(Sqlite3_stmt) -> Int

fn sqlite3_close(Sqlite3) -> Int

fn sqlite3_close_v2(Sqlite3) -> Int

fn sqlite3_collation_needed(Sqlite3, AnyType, FuncRef[(AnyType, Sqlite3, Int, CStr) -> Unit]) -> Int

fn sqlite3_collation_needed16(Sqlite3, AnyType, FuncRef[(AnyType, Sqlite3, Int, AnyType) -> Unit]) -> Int

fn sqlite3_column_blob(Sqlite3_stmt, Int) -> AnyType

fn sqlite3_column_bytes(Sqlite3_stmt, Int) -> Int

fn sqlite3_column_bytes16(Sqlite3_stmt, Int) -> Int

fn sqlite3_column_count(Sqlite3_stmt) -> Int

fn sqlite3_column_database_name(Sqlite3_stmt, Int) -> CStr

fn sqlite3_column_database_name16(Sqlite3_stmt, Int) -> AnyType

fn sqlite3_column_decltype(Sqlite3_stmt, Int) -> CStr

fn sqlite3_column_decltype16(Sqlite3_stmt, Int) -> AnyType

fn sqlite3_column_double(Sqlite3_stmt, Int) -> Double

fn sqlite3_column_int(Sqlite3_stmt, Int) -> Int

fn sqlite3_column_int64(Sqlite3_stmt, Int) -> Int64

fn sqlite3_column_name(Sqlite3_stmt, Int) -> CStr

fn sqlite3_column_name16(Sqlite3_stmt, Int) -> AnyType

fn sqlite3_column_origin_name(Sqlite3_stmt, Int) -> CStr

fn sqlite3_column_origin_name16(Sqlite3_stmt, Int) -> AnyType

fn sqlite3_column_table_name(Sqlite3_stmt, Int) -> CStr

fn sqlite3_column_table_name16(Sqlite3_stmt, Int) -> AnyType

fn sqlite3_column_text(Sqlite3_stmt, Int) -> CStr

fn sqlite3_column_text16(Sqlite3_stmt, Int) -> AnyType

fn sqlite3_column_type(Sqlite3_stmt, Int) -> Int

fn sqlite3_column_value(Sqlite3_stmt, Int) -> Sqlite3_value

fn sqlite3_commit_hook(Sqlite3, FuncRef[(AnyType) -> Int], AnyType) -> AnyType

fn sqlite3_compileoption_get(Int) -> CStr

fn sqlite3_compileoption_used(CStr) -> Int

fn sqlite3_complete(CStr) -> Int

fn sqlite3_complete16(AnyType) -> Int

fn sqlite3_config(Int) -> Int

fn sqlite3_context_db_handle(Sqlite3_context) -> Sqlite3

fn sqlite3_create_collation(Sqlite3, CStr, Int, AnyType, FuncRef[(AnyType, Int, AnyType, Int, AnyType) -> Int]) -> Int

fn sqlite3_create_collation16(Sqlite3, AnyType, Int, AnyType, FuncRef[(AnyType, Int, AnyType, Int, AnyType) -> Int]) -> Int

fn sqlite3_create_collation_v2(Sqlite3, CStr, Int, AnyType, FuncRef[(AnyType, Int, AnyType, Int, AnyType) -> Int], FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_create_filename(CStr, CStr, CStr, Int, FixedArray[CStr]) -> Sqlite3_filename

fn sqlite3_create_function(Sqlite3, CStr, Int, Int, AnyType, FuncRef[(Sqlite3_context, Int, FixedArray[Sqlite3_value]) -> Unit], FuncRef[(Sqlite3_context, Int, AnyType) -> Unit], FuncRef[(Sqlite3_context) -> Unit]) -> Int

fn sqlite3_create_function16(Sqlite3, AnyType, Int, Int, AnyType, FuncRef[(Sqlite3_context, Int, FixedArray[Sqlite3_value]) -> Unit], FuncRef[(Sqlite3_context, Int, AnyType) -> Unit], FuncRef[(Sqlite3_context) -> Unit]) -> Int

fn sqlite3_create_function_v2(Sqlite3, CStr, Int, Int, AnyType, FuncRef[(Sqlite3_context, Int, FixedArray[Sqlite3_value]) -> Unit], FuncRef[(Sqlite3_context, Int, AnyType) -> Unit], FuncRef[(Sqlite3_context) -> Unit], FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_create_module(Sqlite3, CStr, Sqlite3_module, AnyType) -> Int

fn sqlite3_create_module_v2(Sqlite3, CStr, Sqlite3_module, AnyType, FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_create_window_function(Sqlite3, CStr, Int, Int, AnyType, FuncRef[(Sqlite3_context, Int, FixedArray[Sqlite3_value]) -> Unit], FuncRef[(Sqlite3_context) -> Unit], FuncRef[(Sqlite3_context) -> Unit], FuncRef[(Sqlite3_context, Int, AnyType) -> Unit], FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_data_count(Sqlite3_stmt) -> Int

fn sqlite3_database_file_object(CStr) -> Sqlite3_file

fn sqlite3_db_cacheflush(Sqlite3) -> Int

fn sqlite3_db_config(Sqlite3, Int) -> Int

fn sqlite3_db_filename(Sqlite3, CStr) -> Sqlite3_filename

fn sqlite3_db_handle(Sqlite3_stmt) -> Sqlite3

fn sqlite3_db_mutex(Sqlite3) -> Sqlite3_mutex

fn sqlite3_db_name(Sqlite3, Int) -> CStr

fn sqlite3_db_readonly(Sqlite3, CStr) -> Int

fn sqlite3_db_release_memory(Sqlite3) -> Int

fn sqlite3_db_status(Sqlite3, Int, AnyType, AnyType, Int) -> Int

fn sqlite3_declare_vtab(Sqlite3, CStr) -> Int

fn sqlite3_deserialize(Sqlite3, CStr, CStr, Int64, Int64, UInt) -> Int

fn sqlite3_drop_modules(Sqlite3, Ref[CStr]) -> Int

fn sqlite3_enable_load_extension(Sqlite3, Int) -> Int

fn sqlite3_enable_shared_cache(Int) -> Int

fn sqlite3_errcode(Sqlite3) -> Int

fn sqlite3_errmsg(Sqlite3) -> CStr

fn sqlite3_errmsg16(Sqlite3) -> AnyType

fn sqlite3_error_offset(Sqlite3) -> Int

fn sqlite3_errstr(Int) -> CStr

fn sqlite3_exec(Sqlite3, CStr, FuncRef[(AnyType, Int, Ref[CStr], Ref[CStr]) -> Int], AnyType, AnyType) -> Int

fn sqlite3_expanded_sql(Sqlite3_stmt) -> CStr

fn sqlite3_expired(Sqlite3_stmt) -> Int

fn sqlite3_extended_errcode(Sqlite3) -> Int

fn sqlite3_extended_result_codes(Sqlite3, Int) -> Int

fn sqlite3_file_control(Sqlite3, CStr, Int, AnyType) -> Int

fn sqlite3_filename_database(Sqlite3_filename) -> CStr

fn sqlite3_filename_journal(Sqlite3_filename) -> CStr

fn sqlite3_filename_wal(Sqlite3_filename) -> CStr

fn sqlite3_finalize(Sqlite3_stmt) -> Int

fn sqlite3_free(AnyType) -> Unit

fn sqlite3_free_filename(Sqlite3_filename) -> Unit

fn sqlite3_free_table(Ref[CStr]) -> Unit

fn sqlite3_get_autocommit(Sqlite3) -> Int

fn sqlite3_get_auxdata(Sqlite3_context, Int) -> AnyType

fn sqlite3_get_clientdata(Sqlite3, CStr) -> AnyType

#deprecated
fn sqlite3_get_table(Sqlite3, CStr, AnyType, AnyType, AnyType, Ref[CStr]) -> Int

fn sqlite3_global_recover() -> Int

fn sqlite3_hard_heap_limit64(Int64) -> Int64

fn sqlite3_initialize() -> Int

fn sqlite3_interrupt(Sqlite3) -> Unit

fn sqlite3_is_interrupted(Sqlite3) -> Int

fn sqlite3_keyword_check(CStr, Int) -> Int

fn sqlite3_keyword_count() -> Int

fn sqlite3_keyword_name(Int, Ref[CStr], Ref[Int]) -> Int

fn sqlite3_last_insert_rowid(Sqlite3) -> Int64

fn sqlite3_libversion() -> CStr

fn sqlite3_libversion_number() -> Int

fn sqlite3_limit(Sqlite3, Int, Int) -> Int

fn sqlite3_load_extension(Sqlite3, CStr, CStr, AnyType) -> Int

fn sqlite3_log(Int, CStr) -> Unit

fn sqlite3_malloc(Int) -> AnyType

fn sqlite3_malloc64(UInt64) -> AnyType

fn sqlite3_memory_alarm(FuncRef[(AnyType, Int64, Int) -> Unit], AnyType, Int64) -> Int

fn sqlite3_memory_highwater(Int) -> Int64

fn sqlite3_memory_used() -> Int64

fn sqlite3_mprintf(CStr) -> CStr

fn sqlite3_msize(AnyType) -> UInt64

fn sqlite3_mutex_alloc(Int) -> Sqlite3_mutex

fn sqlite3_mutex_enter(Sqlite3_mutex) -> Unit

fn sqlite3_mutex_free(Sqlite3_mutex) -> Unit

fn sqlite3_mutex_held(Sqlite3_mutex) -> Int

fn sqlite3_mutex_leave(Sqlite3_mutex) -> Unit

fn sqlite3_mutex_notheld(Sqlite3_mutex) -> Int

fn sqlite3_mutex_try(Sqlite3_mutex) -> Int

fn sqlite3_next_stmt(Sqlite3, Sqlite3_stmt) -> Sqlite3_stmt

fn sqlite3_open(CStr, Ref[Sqlite3]) -> Int

fn sqlite3_open16(AnyType, Ref[Sqlite3]) -> Int

fn sqlite3_open_v2(CStr, Ref[Sqlite3], Int, CStr) -> Int

fn sqlite3_os_end() -> Int

fn sqlite3_os_init() -> Int

fn sqlite3_overload_function(Sqlite3, CStr, Int) -> Int

fn sqlite3_prepare(Sqlite3, CStr, Int, Ref[Sqlite3_stmt], Ref[CStr]) -> Int

fn sqlite3_prepare16(Sqlite3, AnyType, Int, Ref[Sqlite3_stmt], Ref[CStr]) -> Int

fn sqlite3_prepare16_v2(Sqlite3, AnyType, Int, Ref[Sqlite3_stmt], AnyType) -> Int

fn sqlite3_prepare16_v3(Sqlite3, AnyType, Int, UInt, Ref[Sqlite3_stmt], AnyType) -> Int

fn sqlite3_prepare_v2(Sqlite3, CStr, Int, Ref[Sqlite3_stmt], AnyType) -> Int

fn sqlite3_prepare_v3(Sqlite3, CStr, Int, UInt, Ref[Sqlite3_stmt], AnyType) -> Int

fn sqlite3_profile(Sqlite3, FuncRef[(AnyType, CStr, UInt64) -> Unit], AnyType) -> AnyType

fn sqlite3_progress_handler(Sqlite3, Int, FuncRef[(AnyType) -> Int], AnyType) -> Unit

fn sqlite3_randomness(Int, AnyType) -> Unit

fn sqlite3_realloc(AnyType, Int) -> AnyType

fn sqlite3_realloc64(AnyType, UInt64) -> AnyType

fn sqlite3_release_memory(Int) -> Int

fn sqlite3_reset(Sqlite3_stmt) -> Int

fn sqlite3_reset_auto_extension() -> Unit

fn sqlite3_result_blob(Sqlite3_context, AnyType, Int, FuncRef[(AnyType) -> Unit]) -> Unit

fn sqlite3_result_blob64(Sqlite3_context, AnyType, UInt64, FuncRef[(AnyType) -> Unit]) -> Unit

fn sqlite3_result_double(Sqlite3_context, Double) -> Unit

fn sqlite3_result_error(Sqlite3_context, CStr, Int) -> Unit

fn sqlite3_result_error16(Sqlite3_context, AnyType, Int) -> Unit

fn sqlite3_result_error_code(Sqlite3_context, Int) -> Unit

fn sqlite3_result_error_nomem(Sqlite3_context) -> Unit

fn sqlite3_result_error_toobig(Sqlite3_context) -> Unit

fn sqlite3_result_int(Sqlite3_context, Int) -> Unit

fn sqlite3_result_int64(Sqlite3_context, Int64) -> Unit

fn sqlite3_result_null(Sqlite3_context) -> Unit

fn sqlite3_result_pointer(Sqlite3_context, AnyType, CStr, FuncRef[(AnyType) -> Unit]) -> Unit

fn sqlite3_result_subtype(Sqlite3_context, UInt) -> Unit

fn sqlite3_result_text(Sqlite3_context, CStr, Int, FuncRef[(AnyType) -> Unit]) -> Unit

fn sqlite3_result_text16(Sqlite3_context, AnyType, Int, FuncRef[(AnyType) -> Unit]) -> Unit

fn sqlite3_result_text16be(Sqlite3_context, AnyType, Int, FuncRef[(AnyType) -> Unit]) -> Unit

fn sqlite3_result_text16le(Sqlite3_context, AnyType, Int, FuncRef[(AnyType) -> Unit]) -> Unit

fn sqlite3_result_text64(Sqlite3_context, CStr, UInt64, FuncRef[(AnyType) -> Unit], Byte) -> Unit

fn sqlite3_result_value(Sqlite3_context, Sqlite3_value) -> Unit

fn sqlite3_result_zeroblob(Sqlite3_context, Int) -> Unit

fn sqlite3_result_zeroblob64(Sqlite3_context, UInt64) -> Int

fn sqlite3_rollback_hook(Sqlite3, FuncRef[(AnyType) -> Unit], AnyType) -> AnyType

fn sqlite3_rtree_geometry_callback(Sqlite3, CStr, FuncRef[(AnyType, Int, AnyType, AnyType) -> Int], AnyType) -> Int

fn sqlite3_rtree_query_callback(Sqlite3, CStr, FuncRef[(AnyType) -> Int], AnyType, FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_serialize(Sqlite3, CStr, AnyType, UInt) -> CStr

fn sqlite3_set_authorizer(Sqlite3, FuncRef[(AnyType, Int, CStr, CStr, CStr, CStr) -> Int], AnyType) -> Int

fn sqlite3_set_auxdata(Sqlite3_context, Int, AnyType, FuncRef[(AnyType) -> Unit]) -> Unit

fn sqlite3_set_clientdata(Sqlite3, CStr, AnyType, FuncRef[(AnyType) -> Unit]) -> Int

fn sqlite3_set_last_insert_rowid(Sqlite3, Int64) -> Unit

fn sqlite3_setlk_timeout(Sqlite3, Int, Int) -> Int

fn sqlite3_shutdown() -> Int

fn sqlite3_sleep(Int) -> Int

fn sqlite3_snapshot_cmp(Sqlite3_snapshot, Sqlite3_snapshot) -> Int

fn sqlite3_snapshot_free(Sqlite3_snapshot) -> Unit

fn sqlite3_snapshot_get(Sqlite3, CStr, Ref[Sqlite3_snapshot]) -> Int

fn sqlite3_snapshot_open(Sqlite3, CStr, Sqlite3_snapshot) -> Int

fn sqlite3_snapshot_recover(Sqlite3, CStr) -> Int

fn sqlite3_snprintf(Int, CStr, CStr) -> CStr

fn sqlite3_soft_heap_limit(Int) -> Unit

fn sqlite3_soft_heap_limit64(Int64) -> Int64

fn sqlite3_sourceid() -> CStr

fn sqlite3_sql(Sqlite3_stmt) -> CStr

fn sqlite3_status(Int, AnyType, AnyType, Int) -> Int

fn sqlite3_status64(Int, AnyType, AnyType, Int) -> Int

fn sqlite3_step(Sqlite3_stmt) -> Int

fn sqlite3_stmt_busy(Sqlite3_stmt) -> Int

fn sqlite3_stmt_explain(Sqlite3_stmt, Int) -> Int

fn sqlite3_stmt_isexplain(Sqlite3_stmt) -> Int

fn sqlite3_stmt_readonly(Sqlite3_stmt) -> Int

fn sqlite3_stmt_scanstatus(Sqlite3_stmt, Int, Int, AnyType) -> Int

fn sqlite3_stmt_scanstatus_reset(Sqlite3_stmt) -> Unit

fn sqlite3_stmt_scanstatus_v2(Sqlite3_stmt, Int, Int, Int, AnyType) -> Int

fn sqlite3_stmt_status(Sqlite3_stmt, Int, Int) -> Int

fn sqlite3_str_append(Sqlite3_str, CStr, Int) -> Unit

fn sqlite3_str_appendall(Sqlite3_str, CStr) -> Unit

fn sqlite3_str_appendchar(Sqlite3_str, Int, Byte) -> Unit

fn sqlite3_str_appendf(Sqlite3_str, CStr) -> Unit

fn sqlite3_str_errcode(Sqlite3_str) -> Int

fn sqlite3_str_finish(Sqlite3_str) -> CStr

fn sqlite3_str_length(Sqlite3_str) -> Int

fn sqlite3_str_new(Sqlite3) -> Sqlite3_str

fn sqlite3_str_reset(Sqlite3_str) -> Unit

fn sqlite3_str_value(Sqlite3_str) -> CStr

fn sqlite3_str_vappendf(Sqlite3_str, CStr, Int) -> Unit

fn sqlite3_strglob(CStr, CStr) -> Int

fn sqlite3_stricmp(CStr, CStr) -> Int

fn sqlite3_strlike(CStr, CStr, UInt) -> Int

fn sqlite3_strnicmp(CStr, CStr, Int) -> Int

fn sqlite3_system_errno(Sqlite3) -> Int

fn sqlite3_table_column_metadata(Sqlite3, CStr, CStr, CStr, AnyType, AnyType, AnyType, AnyType, AnyType) -> Int

fn sqlite3_test_control(Int) -> Int

fn sqlite3_thread_cleanup() -> Unit

fn sqlite3_threadsafe() -> Int

fn sqlite3_total_changes(Sqlite3) -> Int

fn sqlite3_total_changes64(Sqlite3) -> Int64

fn sqlite3_trace(Sqlite3, FuncRef[(AnyType, CStr) -> Unit], AnyType) -> AnyType

fn sqlite3_trace_v2(Sqlite3, UInt, FuncRef[(UInt, AnyType, AnyType, AnyType) -> Int], AnyType) -> Int

fn sqlite3_transfer_bindings(Sqlite3_stmt, Sqlite3_stmt) -> Int

fn sqlite3_txn_state(Sqlite3, CStr) -> Int

fn sqlite3_unlock_notify(Sqlite3, FuncRef[(AnyType, Int) -> Unit], AnyType) -> Int

fn sqlite3_update_hook(Sqlite3, FuncRef[(AnyType, Int, CStr, CStr, Int64) -> Unit], AnyType) -> AnyType

fn sqlite3_uri_boolean(Sqlite3_filename, CStr, Int) -> Int

fn sqlite3_uri_int64(Sqlite3_filename, CStr, Int64) -> Int64

fn sqlite3_uri_key(Sqlite3_filename, Int) -> CStr

fn sqlite3_uri_parameter(Sqlite3_filename, CStr) -> CStr

fn sqlite3_user_data(Sqlite3_context) -> AnyType

fn sqlite3_value_blob(Sqlite3_value) -> AnyType

fn sqlite3_value_bytes(Sqlite3_value) -> Int

fn sqlite3_value_bytes16(Sqlite3_value) -> Int

fn sqlite3_value_double(Sqlite3_value) -> Double

fn sqlite3_value_dup(Sqlite3_value) -> Sqlite3_value

fn sqlite3_value_encoding(Sqlite3_value) -> Int

fn sqlite3_value_free(Sqlite3_value) -> Unit

fn sqlite3_value_frombind(Sqlite3_value) -> Int

fn sqlite3_value_int(Sqlite3_value) -> Int

fn sqlite3_value_int64(Sqlite3_value) -> Int64

fn sqlite3_value_nochange(Sqlite3_value) -> Int

fn sqlite3_value_numeric_type(Sqlite3_value) -> Int

fn sqlite3_value_pointer(Sqlite3_value, CStr) -> AnyType

fn sqlite3_value_subtype(Sqlite3_value) -> UInt

fn sqlite3_value_text(Sqlite3_value) -> CStr

fn sqlite3_value_text16(Sqlite3_value) -> AnyType

fn sqlite3_value_text16be(Sqlite3_value) -> AnyType

fn sqlite3_value_text16le(Sqlite3_value) -> AnyType

fn sqlite3_value_type(Sqlite3_value) -> Int

fn sqlite3_vfs_find(CStr) -> Sqlite3_vfs

fn sqlite3_vfs_register(Sqlite3_vfs, Int) -> Int

fn sqlite3_vfs_unregister(Sqlite3_vfs) -> Int

fn sqlite3_vmprintf(CStr, Int) -> CStr

fn sqlite3_vsnprintf(Int, CStr, CStr, Int) -> CStr

fn sqlite3_vtab_collation(Sqlite3_index_info, Int) -> CStr

fn sqlite3_vtab_config(Sqlite3, Int) -> Int

fn sqlite3_vtab_distinct(Sqlite3_index_info) -> Int

fn sqlite3_vtab_in(Sqlite3_index_info, Int, Int) -> Int

fn sqlite3_vtab_in_first(Sqlite3_value, Ref[Sqlite3_value]) -> Int

fn sqlite3_vtab_in_next(Sqlite3_value, Ref[Sqlite3_value]) -> Int

fn sqlite3_vtab_nochange(Sqlite3_context) -> Int

fn sqlite3_vtab_on_conflict(Sqlite3) -> Int

fn sqlite3_vtab_rhs_value(Sqlite3_index_info, Int, Ref[Sqlite3_value]) -> Int

fn sqlite3_wal_autocheckpoint(Sqlite3, Int) -> Int

fn sqlite3_wal_checkpoint(Sqlite3, CStr) -> Int

fn sqlite3_wal_checkpoint_v2(Sqlite3, CStr, Int, AnyType, AnyType) -> Int

fn sqlite3_wal_hook(Sqlite3, FuncRef[(AnyType, Sqlite3, CStr, Int) -> Int], AnyType) -> AnyType

fn sqlite3_win32_set_directory(UInt64, AnyType) -> Int

fn sqlite3_win32_set_directory16(UInt64, AnyType) -> Int

fn sqlite3_win32_set_directory8(UInt64, CStr) -> Int

// Types and methods
type AnyType

type CStr
fn CStr::convert_to_moonbit_string(Self) -> String
fn CStr::convert_to_moonbit_string_with_length(Self, UInt) -> String
fn CStr::from_string(String) -> Self
fn CStr::is_nullptr(Self) -> Bool

type Sqlite3
fn Sqlite3::from_void_ptr(AnyType) -> Self
fn Sqlite3::init() -> Self
fn Sqlite3::is_nullptr(Self) -> Bool
fn Sqlite3::to_void_ptr(Self) -> AnyType

type Sqlite3_backup
fn Sqlite3_backup::from_void_ptr(AnyType) -> Self
fn Sqlite3_backup::init() -> Self
fn Sqlite3_backup::is_nullptr(Self) -> Bool
fn Sqlite3_backup::to_void_ptr(Self) -> AnyType

type Sqlite3_blob
fn Sqlite3_blob::from_void_ptr(AnyType) -> Self
fn Sqlite3_blob::init() -> Self
fn Sqlite3_blob::is_nullptr(Self) -> Bool
fn Sqlite3_blob::to_void_ptr(Self) -> AnyType

type Sqlite3_context
fn Sqlite3_context::from_void_ptr(AnyType) -> Self
fn Sqlite3_context::init() -> Self
fn Sqlite3_context::is_nullptr(Self) -> Bool
fn Sqlite3_context::to_void_ptr(Self) -> AnyType

type Sqlite3_file
fn Sqlite3_file::from_void_ptr(AnyType) -> Self
fn Sqlite3_file::init() -> Self
fn Sqlite3_file::is_nullptr(Self) -> Bool
fn Sqlite3_file::to_void_ptr(Self) -> AnyType

type Sqlite3_filename
fn Sqlite3_filename::from_void_ptr(AnyType) -> Self
fn Sqlite3_filename::init() -> Self
fn Sqlite3_filename::is_nullptr(Self) -> Bool
fn Sqlite3_filename::to_void_ptr(Self) -> AnyType

type Sqlite3_index_info
fn Sqlite3_index_info::from_void_ptr(AnyType) -> Self
fn Sqlite3_index_info::init() -> Self
fn Sqlite3_index_info::is_nullptr(Self) -> Bool
fn Sqlite3_index_info::to_void_ptr(Self) -> AnyType

type Sqlite3_module
fn Sqlite3_module::from_void_ptr(AnyType) -> Self
fn Sqlite3_module::init() -> Self
fn Sqlite3_module::is_nullptr(Self) -> Bool
fn Sqlite3_module::to_void_ptr(Self) -> AnyType

type Sqlite3_mutex
fn Sqlite3_mutex::from_void_ptr(AnyType) -> Self
fn Sqlite3_mutex::init() -> Self
fn Sqlite3_mutex::is_nullptr(Self) -> Bool
fn Sqlite3_mutex::to_void_ptr(Self) -> AnyType

type Sqlite3_snapshot
fn Sqlite3_snapshot::from_void_ptr(AnyType) -> Self
fn Sqlite3_snapshot::init() -> Self
fn Sqlite3_snapshot::is_nullptr(Self) -> Bool
fn Sqlite3_snapshot::to_void_ptr(Self) -> AnyType

type Sqlite3_stmt
fn Sqlite3_stmt::from_void_ptr(AnyType) -> Self
fn Sqlite3_stmt::init() -> Self
fn Sqlite3_stmt::is_nullptr(Self) -> Bool
fn Sqlite3_stmt::to_void_ptr(Self) -> AnyType

type Sqlite3_str
fn Sqlite3_str::from_void_ptr(AnyType) -> Self
fn Sqlite3_str::init() -> Self
fn Sqlite3_str::is_nullptr(Self) -> Bool
fn Sqlite3_str::to_void_ptr(Self) -> AnyType

type Sqlite3_value
fn Sqlite3_value::from_void_ptr(AnyType) -> Self
fn Sqlite3_value::init() -> Self
fn Sqlite3_value::is_nullptr(Self) -> Bool
fn Sqlite3_value::to_void_ptr(Self) -> AnyType

type Sqlite3_vfs
fn Sqlite3_vfs::from_void_ptr(AnyType) -> Self
fn Sqlite3_vfs::init() -> Self
fn Sqlite3_vfs::is_nullptr(Self) -> Bool
fn Sqlite3_vfs::to_void_ptr(Self) -> AnyType

// Type aliases

// Traits

